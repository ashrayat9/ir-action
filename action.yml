name: 'VB Scan Action'
description: 'Perform a VB SBOM scan and retrieve ECR credentials'
inputs:
  VB_API_URL:
    description: 'VB API URL'
    required: true
  VB_API_KEY:
    description: 'VB API Key'
    required: true
outputs:
  scan-id: ${{ steps.parseResponse.outputs.scan_id }}
  ecr_username: ${{steps.ecr_details.outputs.username}}
  ecr_token: ${{steps.ecr_details.outputs.token}}
  ecr_region: ${{steps.ecr_details.outputs.region}}
  ecr_id: ${{steps.ecr_details.outputs.registry_id}}

runs:
  using: 'composite'
  steps:
    - name: Initiating SBOM Scan
      id: createScan
      uses: fjogeleit/http-request-action@v1.15.1
      with:
        url: '${{ inputs.VB_API_URL }}/utilityapi/v1/scan'
        method: 'POST'
        data: '{"api_key": "${{ inputs.VB_API_KEY }}"}'

    - name: Parse Response
      id: parseResponse
      run: |
           echo "scan_id=${{fromJSON(steps.createScan.outputs.response).data.scan_id}}" >> "$GITHUB_OUTPUT"
           echo "$scan_id"
      shell: bash
    
    - name: Fetching VB Token
      id: fetchECRDetails
      uses: fjogeleit/http-request-action@v1.15.1
      with:
          url: '${{ inputs.VB_API_URL }}/utilityapi/v1/registry?api_key=${{ inputs.VB_API_KEY }}'
          method: 'GET'

    - name: Decoding VB Token
      id: parseToken
      run: |
            echo "DECODED_TOKEN=$(echo ${{ fromJson(steps.fetchECRDetails.outputs.response).data }} | base64 -d)" >> "$GITHUB_OUTPUT"
            echo "$DECODED_TOKEN"
      shell: bash

    - name: ECR Details
      id: ecr_details
      run: |
        echo "username=${{fromJSON(steps.parseToken.outputs.DECODED_TOKEN).username}}" >> "$GITHUB_OUTPUT"
        echo "token=${{fromJSON(steps.parseToken.outputs.DECODED_TOKEN).password}}" >> "$GITHUB_OUTPUT"
        echo "region=${{fromJSON(steps.parseToken.outputs.DECODED_TOKEN).region}}" >> "$GITHUB_OUTPUT"
        echo "registry_id=${{fromJSON(steps.parseToken.outputs.DECODED_TOKEN).registry_id}}" >> "$GITHUB_OUTPUT"
      shell: bash
branding:
  icon: 'search'
  color: 'blue'